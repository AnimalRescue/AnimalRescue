/*
 * AnimalRescue API
 *
 * API for OSS AnimalRescue
 *
 * OpenAPI spec version: 1.0.0-oas3
 * Contact: jlgartee@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class TimeInterval : IEquatable<TimeInterval>
    { 
        /// <summary>
        /// Gets or Sets FromTime
        /// </summary>
        
        public enum HalfHourMilitaryTimeSelect
        {
            /// <summary>
            /// Enum _0000Enum for 00:00
            /// </summary>
            
            _0000Enum = 00:00,
            /// <summary>
            /// Enum _0030Enum for 00:30
            /// </summary>
            
            _0030Enum = 00:30,
            /// <summary>
            /// Enum _0100Enum for 01:00
            /// </summary>
            
            _0100Enum = 01:00,
            /// <summary>
            /// Enum _0130Enum for 01:30
            /// </summary>
            
            _0130Enum = 01:30,
            /// <summary>
            /// Enum _0200Enum for 02:00
            /// </summary>
            
            _0200Enum = 02:00,
            /// <summary>
            /// Enum _0230Enum for 02:30
            /// </summary>
            
            _0230Enum = 02:30,
            /// <summary>
            /// Enum _0300Enum for 03:00
            /// </summary>
            
            _0300Enum = 03:00,
            /// <summary>
            /// Enum _0330Enum for 03:30
            /// </summary>
            
            _0330Enum = 03:30,
            /// <summary>
            /// Enum _0400Enum for 04:00
            /// </summary>
            
            _0400Enum = 04:00,
            /// <summary>
            /// Enum _0430Enum for 04:30
            /// </summary>
            
            _0430Enum = 04:30,
            /// <summary>
            /// Enum _0500Enum for 05:00
            /// </summary>
            
            _0500Enum = 05:00,
            /// <summary>
            /// Enum _0530Enum for 05:30
            /// </summary>
            
            _0530Enum = 05:30,
            /// <summary>
            /// Enum _0600Enum for 06:00
            /// </summary>
            
            _0600Enum = 06:00,
            /// <summary>
            /// Enum _0630Enum for 06:30
            /// </summary>
            
            _0630Enum = 06:30,
            /// <summary>
            /// Enum _0700Enum for 07:00
            /// </summary>
            
            _0700Enum = 07:00,
            /// <summary>
            /// Enum _0730Enum for 07:30
            /// </summary>
            
            _0730Enum = 07:30,
            /// <summary>
            /// Enum _0800Enum for 08:00
            /// </summary>
            
            _0800Enum = 08:00,
            /// <summary>
            /// Enum _0830Enum for 08:30
            /// </summary>
            
            _0830Enum = 08:30,
            /// <summary>
            /// Enum _0900Enum for 09:00
            /// </summary>
            
            _0900Enum = 09:00,
            /// <summary>
            /// Enum _0930Enum for 09:30
            /// </summary>
            
            _0930Enum = 09:30,
            /// <summary>
            /// Enum _1000Enum for 10:00
            /// </summary>
            
            _1000Enum = 10:00,
            /// <summary>
            /// Enum _1030Enum for 10:30
            /// </summary>
            
            _1030Enum = 10:30,
            /// <summary>
            /// Enum _1100Enum for 11:00
            /// </summary>
            
            _1100Enum = 11:00,
            /// <summary>
            /// Enum _1130Enum for 11:30
            /// </summary>
            
            _1130Enum = 11:30,
            /// <summary>
            /// Enum _1200Enum for 12:00
            /// </summary>
            
            _1200Enum = 12:00,
            /// <summary>
            /// Enum _1230Enum for 12:30
            /// </summary>
            
            _1230Enum = 12:30,
            /// <summary>
            /// Enum _1300Enum for 13:00
            /// </summary>
            
            _1300Enum = 13:00,
            /// <summary>
            /// Enum _1330Enum for 13:30
            /// </summary>
            
            _1330Enum = 13:30,
            /// <summary>
            /// Enum _1400Enum for 14:00
            /// </summary>
            
            _1400Enum = 14:00,
            /// <summary>
            /// Enum _1430Enum for 14:30
            /// </summary>
            
            _1430Enum = 14:30,
            /// <summary>
            /// Enum _1500Enum for 15:00
            /// </summary>
            
            _1500Enum = 15:00,
            /// <summary>
            /// Enum _1530Enum for 15:30
            /// </summary>
            
            _1530Enum = 15:30,
            /// <summary>
            /// Enum _1600Enum for 16:00
            /// </summary>
            
            _1600Enum = 16:00,
            /// <summary>
            /// Enum _1630Enum for 16:30
            /// </summary>
            
            _1630Enum = 16:30,
            /// <summary>
            /// Enum _1700Enum for 17:00
            /// </summary>
            
            _1700Enum = 17:00,
            /// <summary>
            /// Enum _1730Enum for 17:30
            /// </summary>
            
            _1730Enum = 17:30,
            /// <summary>
            /// Enum _1800Enum for 18:00
            /// </summary>
            
            _1800Enum = 18:00,
            /// <summary>
            /// Enum _1830Enum for 18:30
            /// </summary>
            
            _1830Enum = 18:30,
            /// <summary>
            /// Enum _1900Enum for 19:00
            /// </summary>
            
            _1900Enum = 19:00,
            /// <summary>
            /// Enum _1930Enum for 19:30
            /// </summary>
            
            _1930Enum = 19:30,
            /// <summary>
            /// Enum _2000Enum for 20:00
            /// </summary>
            
            _2000Enum = 20:00,
            /// <summary>
            /// Enum _2030Enum for 20:30
            /// </summary>
            
            _2030Enum = 20:30,
            /// <summary>
            /// Enum _2100Enum for 21:00
            /// </summary>
            
            _2100Enum = 21:00,
            /// <summary>
            /// Enum _2130Enum for 21:30
            /// </summary>
            
            _2130Enum = 21:30,
            /// <summary>
            /// Enum _2200Enum for 22:00
            /// </summary>
            
            _2200Enum = 22:00,
            /// <summary>
            /// Enum _2230Enum for 22:30
            /// </summary>
            
            _2230Enum = 22:30,
            /// <summary>
            /// Enum _2300Enum for 23:00
            /// </summary>
            
            _2300Enum = 23:00,
            /// <summary>
            /// Enum _2330Enum for 23:30
            /// </summary>
            
            _2330Enum = 23:30        }

        /// <summary>
        /// Gets or Sets FromTime
        /// </summary>
        [DataMember(Name="fromTime")]
        public HalfHourMilitaryTimeSelect? FromTime { get; set; }

        /// <summary>
        /// Gets or Sets ToTime
        /// </summary>
        
        public enum HalfHourMilitaryTimeSelect
        {
            /// <summary>
            /// Enum _0000Enum for 00:00
            /// </summary>
            
            _0000Enum = 00:00,
            /// <summary>
            /// Enum _0030Enum for 00:30
            /// </summary>
            
            _0030Enum = 00:30,
            /// <summary>
            /// Enum _0100Enum for 01:00
            /// </summary>
            
            _0100Enum = 01:00,
            /// <summary>
            /// Enum _0130Enum for 01:30
            /// </summary>
            
            _0130Enum = 01:30,
            /// <summary>
            /// Enum _0200Enum for 02:00
            /// </summary>
            
            _0200Enum = 02:00,
            /// <summary>
            /// Enum _0230Enum for 02:30
            /// </summary>
            
            _0230Enum = 02:30,
            /// <summary>
            /// Enum _0300Enum for 03:00
            /// </summary>
            
            _0300Enum = 03:00,
            /// <summary>
            /// Enum _0330Enum for 03:30
            /// </summary>
            
            _0330Enum = 03:30,
            /// <summary>
            /// Enum _0400Enum for 04:00
            /// </summary>
            
            _0400Enum = 04:00,
            /// <summary>
            /// Enum _0430Enum for 04:30
            /// </summary>
            
            _0430Enum = 04:30,
            /// <summary>
            /// Enum _0500Enum for 05:00
            /// </summary>
            
            _0500Enum = 05:00,
            /// <summary>
            /// Enum _0530Enum for 05:30
            /// </summary>
            
            _0530Enum = 05:30,
            /// <summary>
            /// Enum _0600Enum for 06:00
            /// </summary>
            
            _0600Enum = 06:00,
            /// <summary>
            /// Enum _0630Enum for 06:30
            /// </summary>
            
            _0630Enum = 06:30,
            /// <summary>
            /// Enum _0700Enum for 07:00
            /// </summary>
            
            _0700Enum = 07:00,
            /// <summary>
            /// Enum _0730Enum for 07:30
            /// </summary>
            
            _0730Enum = 07:30,
            /// <summary>
            /// Enum _0800Enum for 08:00
            /// </summary>
            
            _0800Enum = 08:00,
            /// <summary>
            /// Enum _0830Enum for 08:30
            /// </summary>
            
            _0830Enum = 08:30,
            /// <summary>
            /// Enum _0900Enum for 09:00
            /// </summary>
            
            _0900Enum = 09:00,
            /// <summary>
            /// Enum _0930Enum for 09:30
            /// </summary>
            
            _0930Enum = 09:30,
            /// <summary>
            /// Enum _1000Enum for 10:00
            /// </summary>
            
            _1000Enum = 10:00,
            /// <summary>
            /// Enum _1030Enum for 10:30
            /// </summary>
            
            _1030Enum = 10:30,
            /// <summary>
            /// Enum _1100Enum for 11:00
            /// </summary>
            
            _1100Enum = 11:00,
            /// <summary>
            /// Enum _1130Enum for 11:30
            /// </summary>
            
            _1130Enum = 11:30,
            /// <summary>
            /// Enum _1200Enum for 12:00
            /// </summary>
            
            _1200Enum = 12:00,
            /// <summary>
            /// Enum _1230Enum for 12:30
            /// </summary>
            
            _1230Enum = 12:30,
            /// <summary>
            /// Enum _1300Enum for 13:00
            /// </summary>
            
            _1300Enum = 13:00,
            /// <summary>
            /// Enum _1330Enum for 13:30
            /// </summary>
            
            _1330Enum = 13:30,
            /// <summary>
            /// Enum _1400Enum for 14:00
            /// </summary>
            
            _1400Enum = 14:00,
            /// <summary>
            /// Enum _1430Enum for 14:30
            /// </summary>
            
            _1430Enum = 14:30,
            /// <summary>
            /// Enum _1500Enum for 15:00
            /// </summary>
            
            _1500Enum = 15:00,
            /// <summary>
            /// Enum _1530Enum for 15:30
            /// </summary>
            
            _1530Enum = 15:30,
            /// <summary>
            /// Enum _1600Enum for 16:00
            /// </summary>
            
            _1600Enum = 16:00,
            /// <summary>
            /// Enum _1630Enum for 16:30
            /// </summary>
            
            _1630Enum = 16:30,
            /// <summary>
            /// Enum _1700Enum for 17:00
            /// </summary>
            
            _1700Enum = 17:00,
            /// <summary>
            /// Enum _1730Enum for 17:30
            /// </summary>
            
            _1730Enum = 17:30,
            /// <summary>
            /// Enum _1800Enum for 18:00
            /// </summary>
            
            _1800Enum = 18:00,
            /// <summary>
            /// Enum _1830Enum for 18:30
            /// </summary>
            
            _1830Enum = 18:30,
            /// <summary>
            /// Enum _1900Enum for 19:00
            /// </summary>
            
            _1900Enum = 19:00,
            /// <summary>
            /// Enum _1930Enum for 19:30
            /// </summary>
            
            _1930Enum = 19:30,
            /// <summary>
            /// Enum _2000Enum for 20:00
            /// </summary>
            
            _2000Enum = 20:00,
            /// <summary>
            /// Enum _2030Enum for 20:30
            /// </summary>
            
            _2030Enum = 20:30,
            /// <summary>
            /// Enum _2100Enum for 21:00
            /// </summary>
            
            _2100Enum = 21:00,
            /// <summary>
            /// Enum _2130Enum for 21:30
            /// </summary>
            
            _2130Enum = 21:30,
            /// <summary>
            /// Enum _2200Enum for 22:00
            /// </summary>
            
            _2200Enum = 22:00,
            /// <summary>
            /// Enum _2230Enum for 22:30
            /// </summary>
            
            _2230Enum = 22:30,
            /// <summary>
            /// Enum _2300Enum for 23:00
            /// </summary>
            
            _2300Enum = 23:00,
            /// <summary>
            /// Enum _2330Enum for 23:30
            /// </summary>
            
            _2330Enum = 23:30        }

        /// <summary>
        /// Gets or Sets ToTime
        /// </summary>
        [DataMember(Name="toTime")]
        public HalfHourMilitaryTimeSelect? ToTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TimeInterval {\n");
            sb.Append("  FromTime: ").Append(FromTime).Append("\n");
            sb.Append("  ToTime: ").Append(ToTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TimeInterval)obj);
        }

        /// <summary>
        /// Returns true if TimeInterval instances are equal
        /// </summary>
        /// <param name="other">Instance of TimeInterval to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimeInterval other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    FromTime == other.FromTime ||
                    FromTime != null &&
                    FromTime.Equals(other.FromTime)
                ) && 
                (
                    ToTime == other.ToTime ||
                    ToTime != null &&
                    ToTime.Equals(other.ToTime)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (FromTime != null)
                    hashCode = hashCode * 59 + FromTime.GetHashCode();
                    if (ToTime != null)
                    hashCode = hashCode * 59 + ToTime.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(TimeInterval left, TimeInterval right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TimeInterval left, TimeInterval right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
